{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Button from \"antd/lib/button\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\components\\\\SectionGrid\\\\SectionGrid.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'components/UI/Text/Text';\nimport Box from 'components/UI/Box/Box';\nimport ProductCard from '../ProductCard/ProductCard';\n\nvar LoadMore = function LoadMore(_ref) {\n  var handleLoadMore = _ref.handleLoadMore,\n      showButton = _ref.showButton,\n      buttonText = _ref.buttonText,\n      loading = _ref.loading,\n      loadMoreComponent = _ref.loadMoreComponent,\n      loadMoreStyle = _ref.loadMoreStyle;\n  return !!showButton && __jsx(Box, _extends({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), loadMoreComponent ? loadMoreComponent : __jsx(_Button, {\n    loading: loading,\n    onClick: handleLoadMore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, buttonText || 'Load More'));\n};\n\n_c = LoadMore;\nexport default function SectionGrid(_ref2) {\n  var _this2 = this;\n\n  var _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? [] : _ref2$data,\n      totalItem = _ref2.totalItem,\n      limit = _ref2.limit,\n      columnWidth = _ref2.columnWidth,\n      paginationComponent = _ref2.paginationComponent,\n      handleLoadMore = _ref2.handleLoadMore,\n      loadMoreComponent = _ref2.loadMoreComponent,\n      placeholder = _ref2.placeholder,\n      loading = _ref2.loading,\n      buttonText = _ref2.buttonText,\n      rowStyle = _ref2.rowStyle,\n      columnStyle = _ref2.columnStyle,\n      loadMoreStyle = _ref2.loadMoreStyle,\n      link = _ref2.link;\n  var n = limit ? Number(limit) : 1;\n  var limits = Array(n).fill(0);\n  var showButton = data.length < totalItem;\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    className: \"grid_wrapper\"\n  }, rowStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), data && data.length ? data.map(function (item) {\n    return __jsx(Box, _extends({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), __jsx(ProductCard, _extends({\n      link: link\n    }, item, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })));\n  }) : null, loading && limits.map(function (item, i) {\n    return __jsx(Box, _extends({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: i\n    }, columnStyle, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), placeholder ? placeholder : __jsx(Text, {\n      content: \"Loading ...\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 44\n      }\n    }));\n  })), showButton && __jsx(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), paginationComponent && __jsx(Box, {\n    className: \"pagination_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, paginationComponent));\n}\n_c2 = SectionGrid;\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object\n};\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadMore\");\n$RefreshReg$(_c2, \"SectionGrid\");","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/components/SectionGrid/SectionGrid.js"],"names":["React","PropTypes","Text","Box","ProductCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","i","propTypes","array","isRequired","number","oneOfType","string","element","func","bool","object","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'components/UI/Text/Text';\nimport Box from 'components/UI/Box/Box';\nimport { Button } from 'antd';\nimport ProductCard from '../ProductCard/ProductCard';\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle,\n}) => {\n  return (\n    !!showButton && (\n      <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\n        {loadMoreComponent ? (\n          loadMoreComponent\n        ) : (\n          <Button loading={loading} onClick={handleLoadMore}>\n            {buttonText || 'Load More'}\n          </Button>\n        )}\n      </Box>\n    )\n  );\n};\n\nexport default function SectionGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link,\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n\n  let showButton = data.length < totalItem;\n\n  return (\n    <>\n      <Box className=\"grid_wrapper\" {...rowStyle}>\n        {data && data.length\n          ? data.map((item) => {\n              return (\n                <Box\n                  className=\"grid_column\"\n                  width={columnWidth}\n                  key={item.id}\n                  {...columnStyle}\n                >\n                  <ProductCard link={link} {...item} />\n                </Box>\n              );\n            })\n          : null}\n        {loading &&\n          limits.map((item, i) => (\n            <Box\n              className=\"grid_column\"\n              width={columnWidth}\n              key={i}\n              {...columnStyle}\n            >\n              {placeholder ? placeholder : <Text content=\"Loading ...\" />}\n            </Box>\n          ))}\n      </Box>\n\n      {showButton && (\n        <LoadMore\n          showButton={showButton}\n          handleLoadMore={handleLoadMore}\n          loading={loading}\n          buttonText={buttonText}\n          loadMoreComponent={loadMoreComponent}\n          loadMoreStyle={loadMoreStyle}\n        />\n      )}\n      {paginationComponent && (\n        <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\n      )}\n    </>\n  );\n}\n\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object,\n};\n\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}