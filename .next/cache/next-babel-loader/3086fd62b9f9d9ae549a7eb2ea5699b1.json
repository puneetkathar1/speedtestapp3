{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Upload from \"antd/lib/upload\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { FaCamera } from 'react-icons/fa';\nimport { ImageUpload } from './imageUploader.style';\n\nvar ImageUploader = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImageUploader, _React$Component);\n\n  var _super = _createSuper(ImageUploader);\n\n  function ImageUploader() {\n    var _this;\n\n    _classCallCheck(this, ImageUploader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'xxx.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      return _this.setState({\n        previewVisible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePreview\", function (file) {\n      _this.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (_ref) {\n      var fileList = _ref.fileList;\n      return _this.setState({\n        fileList: fileList\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ImageUploader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n      var Dragger = _Upload.Dragger;\n\n      var uploadButton = __jsx(ImageUpload, null, __jsx(\"div\", {\n        className: \"image-drag-area\"\n      }, __jsx(FaCamera, null)), __jsx(\"div\", {\n        className: \"ant-upload-text\"\n      }, \"Upload Photos\"));\n\n      return __jsx(\"div\", {\n        className: \"clearfix\"\n      }, __jsx(Dragger, {\n        action: \"//jsonplaceholder.typicode.com/posts/\",\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        className: \"image_uploader\"\n      }, fileList.length >= 4 ? null : uploadButton), __jsx(_Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel\n      }, __jsx(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      })));\n    }\n  }]);\n\n  return ImageUploader;\n}(React.Component);\n\nexport { ImageUploader as default };","map":null,"metadata":{},"sourceType":"module"}