{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport React, { Component } from 'react';\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\n/*\n * For Localization enable this code [example : French language as \"fr\"]\n */\n// import moment from 'moment';\n// import 'moment/locale/fr';\n\nvar DateRangePickerBox = /*#__PURE__*/function (_Component) {\n  _inherits(DateRangePickerBox, _Component);\n\n  var _super = _createSuper(DateRangePickerBox);\n\n  function DateRangePickerBox(props) {\n    var _this;\n\n    _classCallCheck(this, DateRangePickerBox);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDateChangeFunc\", function (_ref) {\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      var dateFormat = _this.state.dateFormat;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      });\n\n      if (startDate !== null && endDate !== null) {\n        _this.props.updateSearchData({\n          setStartDate: startDate.format(dateFormat),\n          setEndDate: endDate.format(dateFormat)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFocusChangeFunc\", function (focusedInput) {\n      return _this.setState({\n        focusedInput: focusedInput\n      });\n    });\n\n    var separator = _this.props.item && _this.props.item.separator ? _this.props.item.separator : '/';\n\n    var _dateFormat = _this.props.item && _this.props.item.format ? _this.props.item.format : 'llll';\n\n    _this.state = {\n      focusedInput: null,\n      startDate: _this.props.startDate ? _this.props.startDate : null,\n      endDate: _this.props.endDate ? _this.props.endDate : null,\n      dateFormat: _dateFormat,\n      separator: separator\n    };\n    _this.onDateChangeFunc = _this.onDateChangeFunc.bind(_assertThisInitialized(_this));\n    _this.onFocusChangeFunc = _this.onFocusChangeFunc.bind(_assertThisInitialized(_this));\n    /*\n     * For Localization enable this code [example : French language as \"fr\"]\n     */\n    // moment.locale('fr');\n\n    return _this;\n  }\n\n  _createClass(DateRangePickerBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          focusedInput = _this$state.focusedInput,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate; // DateRangePickerBox props list\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          startDateId = _this$props.startDateId,\n          endDateId = _this$props.endDateId,\n          startDatePlaceholderText = _this$props.startDatePlaceholderText,\n          endDatePlaceholderText = _this$props.endDatePlaceholderText,\n          disabled = _this$props.disabled,\n          showClearDates = _this$props.showClearDates,\n          isRTL = _this$props.isRTL,\n          orientation = _this$props.orientation,\n          anchorDirection = _this$props.anchorDirection,\n          withPortal = _this$props.withPortal,\n          withFullScreenPortal = _this$props.withFullScreenPortal,\n          small = _this$props.small,\n          block = _this$props.block,\n          numberOfMonths = _this$props.numberOfMonths,\n          regular = _this$props.regular,\n          noBorder = _this$props.noBorder; // Add all classs to an array **************\n\n      var addAllClasses = ['date_picker']; // className prop checking **************\n\n      if (className) {\n        addAllClasses.push(className);\n      } // React-Dates DateRangePicker Props List\n\n\n      var defaultCalenderProps = {\n        startDateId: startDateId ? startDateId : 'start_unique_id',\n        endDateId: endDateId ? endDateId : 'end_date_unique_id',\n        startDate: startDate,\n        endDate: endDate,\n        focusedInput: focusedInput,\n        onFocusChange: this.onFocusChangeFunc,\n        onDatesChange: this.onDateChangeFunc,\n        startDatePlaceholderText: startDatePlaceholderText,\n        endDatePlaceholderText: endDatePlaceholderText,\n        disabled: disabled,\n        isRTL: isRTL,\n        showClearDates: showClearDates ? showClearDates : false,\n        orientation: orientation,\n        anchorDirection: anchorDirection,\n        withPortal: withPortal,\n        withFullScreenPortal: withFullScreenPortal,\n        small: small,\n        numberOfMonths: numberOfMonths ? numberOfMonths : 2,\n        block: block,\n        regular: regular,\n        noBorder: noBorder\n      };\n      return __jsx(ReactDatesStyleWrapper, {\n        className: addAllClasses.join(' ')\n      }, __jsx(DateRangePicker, defaultCalenderProps));\n    }\n  }]);\n\n  return DateRangePickerBox;\n}(Component);\n\nexport default DateRangePickerBox;","map":null,"metadata":{},"sourceType":"module"}