{"ast":null,"code":"var _s = $RefreshSig$();\n\n// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nexport default function Portal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      rendererId = _ref.rendererId;\n\n  var _useState = useState(document.createElement('div')),\n      containerEl = _useState[0];\n\n  useEffect(function () {\n    var portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return function () {\n      return portalRoot.removeChild(containerEl);\n    };\n  });\n  return /*#__PURE__*/ReactDOM.createPortal(children, containerEl);\n}\n\n_s(Portal, \"co8OpW/qy56RellLycCju8AICRA=\");\n\n_c = Portal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/components/UI/Portal/Portal.js"],"names":["useState","useEffect","ReactDOM","Portal","children","rendererId","document","createElement","containerEl","portalRoot","getElementById","body","appendChild","removeChild","createPortal"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,SAASC,MAAT,OAA0C;AAAA;;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACvD,kBAAsBL,QAAQ,CAACM,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CAA9B;AAAA,MAAOC,WAAP;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,UAAU,GAAGH,QAAQ,CAACI,cAAT,CAAwBL,UAAxB,KAAuCC,QAAQ,CAACK,IAAjE;AACAF,IAAAA,UAAU,CAACG,WAAX,CAAuBJ,WAAvB;AACA,WAAO;AAAA,aAAMC,UAAU,CAACI,WAAX,CAAuBL,WAAvB,CAAN;AAAA,KAAP;AACD,GAJQ,CAAT;AAKA,sBAAON,QAAQ,CAACY,YAAT,CAAsBV,QAAtB,EAAgCI,WAAhC,CAAP;AACD;;GARuBL,M;;KAAAA,M","sourcesContent":["// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\n\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Portal({ children, rendererId }) {\n  const [containerEl] = useState(document.createElement('div'));\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}\n"]},"metadata":{},"sourceType":"module"}