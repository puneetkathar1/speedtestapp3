{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { IoIosStar, IoIosStarOutline } from 'react-icons/io';\n\nvar Rating = function Rating(props) {\n  var rating = props.rating,\n      ratingCount = props.ratingCount,\n      type = props.type,\n      ratingFieldName = props.ratingFieldName;\n  var i, floorValue;\n  var ratingView = [];\n\n  if (rating && rating !== 0) {\n    floorValue = Math.floor(rating);\n\n    for (i = 0; i < 5; i++) {\n      if (i < floorValue) {\n        ratingView.push(__jsx(IoIosStar, {\n          key: i\n        }));\n      } else {\n        ratingView.push(__jsx(IoIosStarOutline, {\n          key: i\n        }));\n      }\n    }\n  }\n\n  var listingCondition;\n\n  if (rating && rating === 5) {\n    listingCondition = 'Awesome';\n  } else if (4 <= rating && rating < 5) {\n    listingCondition = 'Good';\n  } else if (3 <= rating && rating < 4) {\n    listingCondition = 'Average';\n  } else if (2 <= rating && rating < 3) {\n    listingCondition = 'Bad';\n  } else if (rating >= 1) {\n    listingCondition = 'Terrible';\n  } else {\n    listingCondition = '';\n  }\n\n  var showRatingCount;\n\n  if (ratingCount) {\n    showRatingCount = \"(\" + ratingCount + \")\";\n  } else {\n    showRatingCount = '';\n  }\n\n  return __jsx(React.Fragment, null, type && type === 'bulk' ? __jsx(React.Fragment, null, __jsx(\"span\", null, ratingView), __jsx(\"strong\", null, \" \".concat(listingCondition), \" \", \"\".concat(showRatingCount))) : __jsx(React.Fragment, null, __jsx(\"span\", null, ratingFieldName), \" \", ratingView));\n};\n\nexport default Rating;","map":null,"metadata":{},"sourceType":"module"}