{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Upload from \"antd/lib/upload\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { FaCamera } from 'react-icons/fa';\nimport { ImageUpload } from './imageUploader.style';\nexport default class ImageUploader extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'xxx.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    });\n\n    _defineProperty(this, \"handleCancel\", () => this.setState({\n      previewVisible: false\n    }));\n\n    _defineProperty(this, \"handlePreview\", file => {\n      this.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", ({\n      fileList\n    }) => this.setState({\n      fileList\n    }));\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n    const Dragger = _Upload.Dragger;\n\n    const uploadButton = __jsx(ImageUpload, null, __jsx(\"div\", {\n      className: \"image-drag-area\"\n    }, __jsx(FaCamera, null)), __jsx(\"div\", {\n      className: \"ant-upload-text\"\n    }, \"Upload Photos\"));\n\n    return __jsx(\"div\", {\n      className: \"clearfix\"\n    }, __jsx(Dragger, {\n      action: \"//jsonplaceholder.typicode.com/posts/\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      className: \"image_uploader\"\n    }, fileList.length >= 4 ? null : uploadButton), __jsx(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel\n    }, __jsx(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}