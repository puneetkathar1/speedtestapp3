{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport MapWithSearchBox from 'components/Map/MapSearchBox';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nvar HotelLocation = function HotelLocation(_ref) {\n  var _errors$contactNumber, _errors$contactNumber2;\n\n  var setStep = _ref.setStep;\n  var tempLocationData = [];\n\n  var _useState = useState([]),\n      location = _useState[0],\n      setLocation = _useState[1];\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useStateMachine = useStateMachine(AddListingAction),\n      action = _useStateMachine.action,\n      state = _useStateMachine.state;\n\n  useEffect(function () {\n    register({\n      name: 'locationData'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  var onSubmit = function onSubmit(data) {\n    action(data);\n    setStep(4);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(FormContent, null, __jsx(FormHeader, null, __jsx(Title, null, \"Step 3: Hotel Location\")), __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    sm: 12\n  }, __jsx(FormControl, {\n    label: \"Contact number\",\n    htmlFor: \"contactNumber\",\n    error: errors.contactNumber && __jsx(React.Fragment, null, ((_errors$contactNumber = errors.contactNumber) === null || _errors$contactNumber === void 0 ? void 0 : _errors$contactNumber.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$contactNumber2 = errors.contactNumber) === null || _errors$contactNumber2 === void 0 ? void 0 : _errors$contactNumber2.type) === 'pattern' && __jsx(\"span\", null, \"Please enter your valid number!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"contactNumber\",\n    name: \"contactNumber\",\n    defaultValue: state.data.contactNumber,\n    control: control,\n    placeholder: \"Phone\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    }\n  })))), __jsx(FormControl, {\n    label: \"Details description\",\n    htmlFor: \"locationDescription\",\n    error: errors.locationDescription && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5\n    }),\n    id: \"locationDescription\",\n    name: \"locationDescription\",\n    defaultValue: state.data.locationDescription,\n    control: control,\n    placeholder: \"Write your hotel direction in details , it may help traveler to find your hotel easily\",\n    rules: {\n      required: true\n    }\n  })), __jsx(FormControl, {\n    error: errors.locationData && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(MapWithSearchBox, {\n    name: \"locationData\",\n    updatevalue: function updatevalue(value) {\n      tempLocationData = mapDataHelper(value);\n      setValue('locationData', tempLocationData);\n      setLocation(value);\n    }\n  }))), __jsx(FormAction, null, __jsx(\"div\", {\n    className: \"inner-wrapper\"\n  }, __jsx(_Button, {\n    className: \"back-btn\",\n    htmlType: \"button\",\n    onClick: function onClick() {\n      return setStep(2);\n    }\n  }, __jsx(IoIosArrowBack, null), \" Back\"), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Next\"))));\n};\n\nexport default HotelLocation;","map":null,"metadata":{},"sourceType":"module"}