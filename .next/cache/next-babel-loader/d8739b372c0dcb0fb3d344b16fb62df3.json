{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _Modal from \"antd/lib/modal\";\nimport _Button from \"antd/lib/button\";\nimport _Divider from \"antd/lib/divider\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useState } from 'react';\nimport { IoIosStar, IoIosStarOutline, IoIosArrowDown } from 'react-icons/io';\nimport CommentCard from 'components/UI/CommentCard/CommentCard';\nimport Heading from 'components/UI/Heading/Heading';\nimport Text from 'components/UI/Text/Text';\nimport ReviewForm from './ReviewForm';\nimport ReviewWrapper, { HeaderSection, RatingStatus, FilterElement, RatingSearch, RatingWrapper, TextButton, ModalTitle } from './Review.style';\nimport { Element } from 'react-scroll';\nconst Search = _Input.Search;\n\nconst CommentBox = props => {\n  const {\n    reviews\n  } = props;\n  return reviews && reviews.length !== 0 ? reviews.map((singleReview, i) => {\n    return __jsx(Fragment, {\n      key: i\n    }, __jsx(_Divider, null), __jsx(CommentCard, {\n      singleReview: singleReview\n    }));\n  }) : 'No Review Found';\n};\n\nconst Review = props => {\n  const {\n    ratingCount,\n    reviews,\n    statusHeadingStyle,\n    filterHeadingStyle,\n    ratingLabelStyle,\n    ratingCountStyle\n  } = props;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    review: false,\n    language: false\n  });\n\n  const handleModalOpen = key => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [key]: true\n    }));\n  };\n\n  const handleModalClose = key => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [key]: false\n    }));\n  };\n\n  const onChange = e => {\n    console.log(`checked = ${e.target.checked}`);\n  };\n\n  return __jsx(Element, {\n    name: \"reviews\",\n    className: \"reviews\"\n  }, __jsx(ReviewWrapper, null, __jsx(HeaderSection, null, __jsx(RatingStatus, null, __jsx(Heading, _extends({\n    content: `${ratingCount} Reviews`\n  }, statusHeadingStyle)), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null)), __jsx(RatingSearch, null, __jsx(Search, {\n    placeholder: \"Search reviews\",\n    onSearch: value => console.log(value)\n  }), __jsx(_Button, {\n    type: \"primary\",\n    onClick: () => handleModalOpen('review')\n  }, \"Write a Review\"), __jsx(_Modal, {\n    visible: state.review,\n    onCancel: () => handleModalClose('review'),\n    footer: null,\n    width: \"100%\",\n    maskStyle: {\n      backgroundColor: 'rgba(255, 255, 255, 0.9)'\n    },\n    wrapClassName: \"review_modal\"\n  }, __jsx(ModalTitle, null, \"Write your review here\"), __jsx(ReviewForm, null)))), __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    sm: 12,\n    lg: 9\n  }, __jsx(Heading, _extends({\n    content: \"Traveler Ratings\"\n  }, filterHeadingStyle)), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Exccellent\",\n    as: \"span\"\n  }, ratingLabelStyle)), __jsx(RatingWrapper, null, __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(Text, _extends({\n    content: \"172\",\n    as: \"span\"\n  }, ratingCountStyle))))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Very Good\",\n    as: \"span\"\n  }, ratingLabelStyle)), __jsx(RatingWrapper, null, __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStarOutline, null), __jsx(Text, _extends({\n    content: \"92\",\n    as: \"span\"\n  }, ratingCountStyle))))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Average\",\n    as: \"span\"\n  }, ratingLabelStyle)), __jsx(RatingWrapper, null, __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStarOutline, null), __jsx(IoIosStarOutline, null), __jsx(Text, _extends({\n    content: \"34\",\n    as: \"span\"\n  }, ratingCountStyle))))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Poor\",\n    as: \"span\"\n  }, ratingLabelStyle)), __jsx(RatingWrapper, null, __jsx(IoIosStar, null), __jsx(IoIosStar, null), __jsx(IoIosStarOutline, null), __jsx(IoIosStarOutline, null), __jsx(IoIosStarOutline, null), __jsx(Text, _extends({\n    content: \"11\",\n    as: \"span\"\n  }, ratingCountStyle)))))), __jsx(_Col, {\n    sm: 12,\n    lg: 5\n  }, __jsx(Heading, _extends({\n    content: \"Traveler Type\"\n  }, filterHeadingStyle)), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Families\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Couples\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Solo\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Business\",\n    as: \"span\"\n  }, ratingLabelStyle))))), __jsx(_Col, {\n    sm: 12,\n    lg: 5\n  }, __jsx(Heading, _extends({\n    content: \"Time Of Year\"\n  }, filterHeadingStyle)), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Jan-Mar\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Apr-Jun\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Jul-Sep\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Oct-Dec\",\n    as: \"span\"\n  }, ratingLabelStyle))))), __jsx(_Col, {\n    sm: 12,\n    lg: 5\n  }, __jsx(Heading, _extends({\n    content: \"Languages\"\n  }, filterHeadingStyle)), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"All Languages\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"English\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Spanish\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(TextButton, {\n    onClick: () => handleModalOpen('language')\n  }, \"More Language \", __jsx(IoIosArrowDown, null)), __jsx(_Modal, {\n    width: 320,\n    visible: state.language,\n    onCancel: () => handleModalClose('language'),\n    footer: null,\n    maskStyle: {\n      backgroundColor: 'rgba(255, 255, 255, 0.8)'\n    },\n    wrapClassName: \"language_modal\"\n  }, __jsx(Heading, _extends({\n    content: \"Languages\"\n  }, filterHeadingStyle)), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"All Languages\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"English\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Chinese (Sim.)\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Chinese (Trad.)\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Spanish\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"German\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Italian\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"French\",\n    as: \"span\"\n  }, ratingLabelStyle)))), __jsx(FilterElement, null, __jsx(_Checkbox, {\n    onChange: onChange\n  }, __jsx(Text, _extends({\n    content: \"Russian\",\n    as: \"span\"\n  }, ratingLabelStyle))))))), __jsx(CommentBox, {\n    reviews: reviews\n  })));\n};\n\nReview.defaultProps = {\n  statusHeadingStyle: {\n    color: '#2C2C2C',\n    fontSize: ['17px', '20px', '25px'],\n    mr: '10px'\n  },\n  filterHeadingStyle: {\n    color: '#2C2C2C',\n    fontSize: '15px',\n    fontWeight: '700',\n    lineHeight: '1.2',\n    mb: '0.5em'\n  },\n  ratingLabelStyle: {\n    fontSize: '13px',\n    fontWeight: '400',\n    color: '#2c2c2c',\n    flex: '1'\n  },\n  ratingCountStyle: {\n    fontSize: '13px',\n    fontWeight: '400',\n    color: '#2c2c2c',\n    ml: '8px'\n  }\n};\nexport default Review;","map":null,"metadata":{},"sourceType":"module"}