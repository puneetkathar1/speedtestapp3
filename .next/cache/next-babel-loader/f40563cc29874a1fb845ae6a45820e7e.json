{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\context\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nexport var AuthContext = /*#__PURE__*/React.createContext();\nvar fakeUserData = {\n  id: 1,\n  name: 'Jhon Doe',\n  avatar: 'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',\n  roles: ['USER', 'ADMIN']\n};\n\nvar AuthProvider = function AuthProvider(props) {\n  _s();\n\n  var _useState = useState(false),\n      loggedIn = _useState[0],\n      setLoggedIn = _useState[1];\n\n  var _useState2 = useState({}),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var signIn = function signIn(params) {\n    console.log(params, 'sign in form Props');\n    setUser(fakeUserData);\n    setLoggedIn(true);\n    Router.push(\"/\");\n  };\n\n  var signUp = function signUp(params) {\n    console.log(params, 'sign up form Props');\n    setUser(fakeUserData);\n    setLoggedIn(true);\n    Router.push(\"/\");\n  };\n\n  var logOut = function logOut() {\n    setUser(null);\n    setLoggedIn(false);\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      loggedIn: loggedIn,\n      logOut: logOut,\n      signIn: signIn,\n      signUp: signUp,\n      user: user\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, props.children));\n};\n\n_s(AuthProvider, \"uPJTwJMmAtKSJ1pbyA1R1QcXs+o=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/context/AuthProvider.js"],"names":["React","useState","Router","AuthContext","createContext","fakeUserData","id","name","avatar","roles","AuthProvider","props","loggedIn","setLoggedIn","user","setUser","signIn","params","console","log","push","signUp","logOut","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,IAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,IAAI,EAAE,UAFa;AAGnBC,EAAAA,MAAM,EACJ,+EAJiB;AAKnBC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT;AALY,CAArB;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAC9B,kBAAgCV,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBZ,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,oBAApB;AACAF,IAAAA,OAAO,CAACV,YAAD,CAAP;AACAQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAX,IAAAA,MAAM,CAACkB,IAAP;AACD,GALD;;AAOA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,MAAD,EAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,oBAApB;AACAF,IAAAA,OAAO,CAACV,YAAD,CAAP;AACAQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAX,IAAAA,MAAM,CAACkB,IAAP;AACD,GALD;;AAOA,MAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,QAAQ,EAARA,QADK;AAELU,MAAAA,MAAM,EAANA,MAFK;AAGLN,MAAAA,MAAM,EAANA,MAHK;AAILK,MAAAA,MAAM,EAANA,MAJK;AAKLP,MAAAA,IAAI,EAAJA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,4BAAGH,KAAK,CAACY,QAAT,CATF,CADF;AAaD,CApCD;;GAAMb,Y;;KAAAA,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Router from 'next/router';\n\nexport const AuthContext = React.createContext();\n\nconst fakeUserData = {\n  id: 1,\n  name: 'Jhon Doe',\n  avatar:\n    'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',\n  roles: ['USER', 'ADMIN'],\n};\n\nconst AuthProvider = (props) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  const signIn = (params) => {\n    console.log(params, 'sign in form Props');\n    setUser(fakeUserData);\n    setLoggedIn(true);\n    Router.push(`/`);\n  };\n\n  const signUp = (params) => {\n    console.log(params, 'sign up form Props');\n    setUser(fakeUserData);\n    setLoggedIn(true);\n    Router.push(`/`);\n  };\n\n  const logOut = () => {\n    setUser(null);\n    setLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        loggedIn,\n        logOut,\n        signIn,\n        signUp,\n        user,\n      }}\n    >\n      <>{props.children}</>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}