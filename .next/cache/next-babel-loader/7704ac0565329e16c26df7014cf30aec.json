{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport React, { Component } from 'react';\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\n/*\n * For Localization enable this code [example : French language as \"fr\"]\n */\n// import moment from 'moment';\n// import 'moment/locale/fr';\n\nclass DateRangePickerBox extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onDateChangeFunc\", ({\n      startDate,\n      endDate\n    }) => {\n      const {\n        dateFormat\n      } = this.state;\n      this.setState({\n        startDate,\n        endDate\n      });\n\n      if (startDate !== null && endDate !== null) {\n        this.props.updateSearchData({\n          setStartDate: startDate.format(dateFormat),\n          setEndDate: endDate.format(dateFormat)\n        });\n      }\n    });\n\n    _defineProperty(this, \"onFocusChangeFunc\", focusedInput => {\n      return this.setState({\n        focusedInput\n      });\n    });\n\n    const separator = this.props.item && this.props.item.separator ? this.props.item.separator : '/';\n\n    const _dateFormat = this.props.item && this.props.item.format ? this.props.item.format : 'llll';\n\n    this.state = {\n      focusedInput: null,\n      startDate: this.props.startDate ? this.props.startDate : null,\n      endDate: this.props.endDate ? this.props.endDate : null,\n      dateFormat: _dateFormat,\n      separator\n    };\n    this.onDateChangeFunc = this.onDateChangeFunc.bind(this);\n    this.onFocusChangeFunc = this.onFocusChangeFunc.bind(this);\n    /*\n     * For Localization enable this code [example : French language as \"fr\"]\n     */\n    // moment.locale('fr');\n  }\n\n  render() {\n    const {\n      focusedInput,\n      startDate,\n      endDate\n    } = this.state; // DateRangePickerBox props list\n\n    const {\n      className,\n      startDateId,\n      endDateId,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      disabled,\n      showClearDates,\n      isRTL,\n      orientation,\n      anchorDirection,\n      withPortal,\n      withFullScreenPortal,\n      small,\n      block,\n      numberOfMonths,\n      regular,\n      noBorder\n    } = this.props; // Add all classs to an array **************\n\n    const addAllClasses = ['date_picker']; // className prop checking **************\n\n    if (className) {\n      addAllClasses.push(className);\n    } // React-Dates DateRangePicker Props List\n\n\n    const defaultCalenderProps = {\n      startDateId: startDateId ? startDateId : 'start_unique_id',\n      endDateId: endDateId ? endDateId : 'end_date_unique_id',\n      startDate,\n      endDate,\n      focusedInput,\n      onFocusChange: this.onFocusChangeFunc,\n      onDatesChange: this.onDateChangeFunc,\n      startDatePlaceholderText,\n      endDatePlaceholderText,\n      disabled,\n      isRTL,\n      showClearDates: showClearDates ? showClearDates : false,\n      orientation,\n      anchorDirection,\n      withPortal,\n      withFullScreenPortal,\n      small,\n      numberOfMonths: numberOfMonths ? numberOfMonths : 2,\n      block,\n      regular,\n      noBorder\n    };\n    return __jsx(ReactDatesStyleWrapper, {\n      className: addAllClasses.join(' ')\n    }, __jsx(DateRangePicker, defaultCalenderProps));\n  }\n\n}\n\nexport default DateRangePickerBox;","map":null,"metadata":{},"sourceType":"module"}