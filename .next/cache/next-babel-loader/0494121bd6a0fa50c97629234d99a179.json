{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport Portal from '../Portal/Portal';\nimport { Wrapper, Container } from './ViewWithPopup.style';\nimport { useOnClickOutside } from './useOnClickOutside';\nexport default function ViewWithPopup({\n  view,\n  popup,\n  noView = false,\n  style,\n  className\n}) {\n  const {\n    0: showPopup,\n    1: setShowPopup\n  } = useState(false);\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowPopup(false)); // Add all classs to an array\n\n  const addAllClasses = ['view_with__popup']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(Wrapper, {\n    className: `${addAllClasses.join(' ')} ${showPopup ? 'active' : ''}`,\n    ref: ref\n  }, view && noView && __jsx(\"div\", {\n    className: \"popup_handler\",\n    onClick: () => setShowPopup(!showPopup)\n  }, view), __jsx(Container, {\n    className: \"popup_container\",\n    showPopup: showPopup,\n    onClick: () => setShowPopup(true),\n    style: style\n  }, view && !noView && view, showPopup && __jsx(\"div\", {\n    id: \"popup\"\n  }, __jsx(Portal, {\n    rendererId: \"popup\"\n  }, popup && popup))));\n}","map":null,"metadata":{},"sourceType":"module"}