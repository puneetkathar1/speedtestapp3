{"ast":null,"code":"import _DislikeOutlined from \"@ant-design/icons/lib/icons/DislikeOutlined\";\nimport _DislikeFilled from \"@ant-design/icons/lib/icons/DislikeFilled\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport _LikeOutlined from \"@ant-design/icons/lib/icons/LikeOutlined\";\nimport _LikeFilled from \"@ant-design/icons/lib/icons/LikeFilled\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, Fragment } from 'react';\n\nvar LikeDislike = function LikeDislike() {\n  var _useState = useState({\n    likes: 0,\n    dislikes: 0,\n    action: null\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleLike = function handleLike() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      likes: 1,\n      dislikes: 0,\n      action: 'liked'\n    }));\n  };\n\n  var handleDisLike = function handleDisLike() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      likes: 0,\n      dislikes: 1,\n      action: 'disliked'\n    }));\n  };\n\n  return __jsx(Fragment, null, __jsx(\"span\", {\n    className: \"comment-helpful\"\n  }, __jsx(_Tooltip, {\n    title: \"Like\"\n  }, state.action === 'liked' ? __jsx(_LikeFilled, {\n    onClick: handleLike\n  }) : __jsx(_LikeOutlined, {\n    onClick: handleLike\n  })), __jsx(\"span\", {\n    style: {\n      paddingLeft: 8,\n      cursor: 'auto'\n    }\n  }, state.likes)), __jsx(\"span\", {\n    className: \"comment-report\"\n  }, __jsx(_Tooltip, {\n    title: \"Dislike\"\n  }, state.action === 'disliked' ? __jsx(_DislikeFilled, {\n    onClick: handleDisLike\n  }) : __jsx(_DislikeOutlined, {\n    onClick: handleDisLike\n  })), __jsx(\"span\", {\n    style: {\n      paddingLeft: 8,\n      cursor: 'auto'\n    }\n  }, state.dislikes)));\n};\n\nexport default LikeDislike;","map":null,"metadata":{},"sourceType":"module"}