{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport DatePicker from 'components/UI/AntdDatePicker/AntdDatePicker';\nimport { FormTitle } from './AccountSettings.style';\nvar genderOptions = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}, {\n  label: 'Other',\n  value: 'Other'\n}];\nvar languageOptions = [{\n  label: 'English',\n  value: 'english'\n}, {\n  label: 'Spanish',\n  value: 'spanish'\n}, {\n  label: 'French',\n  value: 'french'\n}, {\n  label: 'Russian',\n  value: 'russian'\n}];\nexport default (function () {\n  var _errors$email, _errors$email2, _errors$phoneNumber, _errors$phoneNumber2;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return __jsx(Fragment, null, __jsx(FormTitle, null, \"Basic Information\"), __jsx(\"form\", {\n    className: \"form-container\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"First name\",\n    htmlFor: \"firstName\",\n    error: errors.firstName && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"firstName\",\n    name: \"firstName\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  }))), __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Last name\",\n    htmlFor: \"lastName\",\n    error: errors.lastName && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"lastName\",\n    name: \"lastName\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  })))), __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Date of birth\",\n    htmlFor: \"dateOfBirthday\",\n    error: errors.dateOfBirthday && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(DatePicker, null),\n    id: \"dateOfBirthday\",\n    name: \"dateOfBirthday\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  }))), __jsx(_Col, {\n    lg: 12\n  }, __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    md: 12\n  }, __jsx(FormControl, {\n    label: \"I am\",\n    htmlFor: \"agentGender\",\n    error: errors.agentGender && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Select, {\n      options: genderOptions\n    }),\n    id: \"agentGender\",\n    name: \"agentGender\",\n    defaultValue: 'male',\n    control: control,\n    rules: {\n      required: true\n    }\n  }))), __jsx(_Col, {\n    md: 12\n  }, __jsx(FormControl, {\n    label: \"Preferred Language\",\n    htmlFor: \"preferredLanguage\",\n    error: errors.preferredLanguage && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Select, {\n      options: languageOptions\n    }),\n    id: \"preferredLanguage\",\n    name: \"preferredLanguage\",\n    defaultValue: 'english',\n    control: control,\n    rules: {\n      required: true\n    }\n  })))))), __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Email address\",\n    htmlFor: \"email\",\n    error: errors.email && __jsx(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && __jsx(\"span\", null, \"Please enter a valid email address!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    }\n  }))), __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Phone number\",\n    htmlFor: \"phoneNumber\",\n    error: errors.phoneNumber && __jsx(React.Fragment, null, ((_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$phoneNumber2 = errors.phoneNumber) === null || _errors$phoneNumber2 === void 0 ? void 0 : _errors$phoneNumber2.type) === 'pattern' && __jsx(\"span\", null, \"Please enter your valid number!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    }\n  }))), __jsx(_Col, {\n    lg: 24\n  }, __jsx(FormControl, {\n    label: \"Where you live\",\n    htmlFor: \"address\",\n    error: errors.address && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"address\",\n    name: \"address\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  }))), __jsx(_Col, {\n    lg: 24\n  }, __jsx(FormControl, {\n    label: \"Describe Yourself (Optional)\",\n    htmlFor: \"describeYourself\"\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5\n    }),\n    id: \"describeYourself\",\n    name: \"describeYourself\",\n    defaultValue: \"\",\n    control: control\n  })))), __jsx(\"div\", {\n    className: \"submit-container\"\n  }, __jsx(_Button, {\n    htmlType: \"submit\",\n    type: \"primary\"\n  }, \"Save Changes\"))));\n});","map":null,"metadata":{},"sourceType":"module"}