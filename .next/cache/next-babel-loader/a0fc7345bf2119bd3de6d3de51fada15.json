{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nimport _Rate from \"antd/lib/rate\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport RadioGroup from 'components/UI/RadioGroup/RadioGroup';\nimport DragAndDropUploader from 'components/UI/ImageUploader/DragAndDropUploader';\nimport { Form, Label, GroupTitle, Description } from './Review.style';\n\nconst ReviewForm = () => {\n  const {\n    control,\n    register,\n    errors,\n    setValue,\n    handleSubmit\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      reviewPhotos: [{\n        uid: '1',\n        name: 'hotel-1.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '2',\n        name: 'hotel-2.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }, {\n        uid: '3',\n        name: 'hotel-3.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    }\n  });\n  useEffect(() => {\n    register({\n      name: 'reviewPhotos'\n    });\n  }, [register]);\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(FormControl, {\n    label: \"Overall Rating\",\n    htmlFor: \"ratings\",\n    error: errors.ratings && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Rate, null),\n    id: \"ratings\",\n    name: \"ratings\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  })), __jsx(FormControl, {\n    label: \"Title of your review\",\n    htmlFor: \"reviewTitle\",\n    error: errors.reviewTitle && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"reviewTitle\",\n    name: \"reviewTitle\",\n    defaultValue: \"\",\n    control: control,\n    placeholder: \"Summarize your visit  or highlight an interesting details\",\n    rules: {\n      required: true\n    }\n  })), __jsx(FormControl, {\n    label: \"Details of your review\",\n    htmlFor: \"reviewDetails\",\n    error: errors.reviewDetails && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5\n    }),\n    id: \"reviewDetails\",\n    name: \"reviewDetails\",\n    defaultValue: \"\",\n    control: control,\n    placeholder: \"Tell people about your experience: your room, location, amenities?\",\n    rules: {\n      required: true\n    }\n  })), __jsx(FormControl, {\n    label: \"What Sort of trip was this?\",\n    htmlFor: \"tripType\",\n    error: errors.tripType && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"tripType\",\n    name: \"tripType\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    size: \"large\",\n    options: [{\n      label: 'Business',\n      value: 'business'\n    }, {\n      label: 'Couples',\n      value: 'couple'\n    }, {\n      label: 'Family',\n      value: 'family'\n    }, {\n      label: 'Friends',\n      value: 'friend'\n    }, {\n      label: 'Solo',\n      value: 'solo'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    },\n    rules: {\n      required: true\n    }\n  })), __jsx(FormControl, {\n    className: \"optional-section\"\n  }, __jsx(GroupTitle, null, \"Could You Say a Little More About It? \", __jsx(\"span\", null, \"(optional)\")), __jsx(Description, null, \"We'd love your opinion ! Anything you can share will help other travelers choose their perfect hotel . Thanks\")), __jsx(FormControl, {\n    className: \"radio-group-area\"\n  }, __jsx(_Row, null, __jsx(_Col, {\n    lg: 8\n  }, __jsx(Label, null, \"Is this a quaint hotel?\")), __jsx(_Col, {\n    lg: 16\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"quaint\",\n    name: \"quaint\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    options: [{\n      label: 'Yes',\n      value: 'yes'\n    }, {\n      label: 'No',\n      value: 'no'\n    }, {\n      label: 'Not Sure',\n      value: 'not-sure'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    }\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    lg: 8\n  }, __jsx(Label, null, \"Does this hotel offer rooms with great views?\")), __jsx(_Col, {\n    lg: 16\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"roomViews\",\n    name: \"roomViews\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    options: [{\n      label: 'Yes',\n      value: 'yes'\n    }, {\n      label: 'No',\n      value: 'no'\n    }, {\n      label: 'Not Sure',\n      value: 'not-sure'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    }\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    lg: 8\n  }, __jsx(Label, null, \"Does this hotel have an indoor pool?\")), __jsx(_Col, {\n    lg: 16\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"indoorPool\",\n    name: \"indoorPool\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    options: [{\n      label: 'Yes',\n      value: 'yes'\n    }, {\n      label: 'No',\n      value: 'no'\n    }, {\n      label: 'Not Sure',\n      value: 'not-sure'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    }\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    lg: 8\n  }, __jsx(Label, null, \"Is this a trendy hotel?\")), __jsx(_Col, {\n    lg: 16\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"isTrendy\",\n    name: \"isTrendy\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    options: [{\n      label: 'Yes',\n      value: 'yes'\n    }, {\n      label: 'No',\n      value: 'no'\n    }, {\n      label: 'Not Sure',\n      value: 'not-sure'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    }\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    lg: 8\n  }, __jsx(Label, null, \"Is this a romantic hotel?\")), __jsx(_Col, {\n    lg: 16\n  }, __jsx(Controller, {\n    as: __jsx(RadioGroup, null),\n    id: \"isRomantic\",\n    name: \"isRomantic\",\n    defaultValue: \"\",\n    control: control,\n    buttonStyle: \"solid\",\n    options: [{\n      label: 'Yes',\n      value: 'yes'\n    }, {\n      label: 'No',\n      value: 'no'\n    }, {\n      label: 'Not Sure',\n      value: 'not-sure'\n    }],\n    onChange: ([e]) => {\n      return e.target.value;\n    }\n  })))), __jsx(_Row, {\n    type: \"flex\",\n    justify: \"space-between\"\n  }, __jsx(_Col, null, __jsx(FormControl, {\n    label: \"Service\",\n    htmlFor: \"serviceRatings\"\n  }, __jsx(Controller, {\n    as: __jsx(_Rate, null),\n    id: \"serviceRatings\",\n    name: \"serviceRatings\",\n    defaultValue: \"\",\n    control: control\n  }))), __jsx(_Col, null, __jsx(FormControl, {\n    label: \"Rooms\",\n    htmlFor: \"roomsRatings\"\n  }, __jsx(Controller, {\n    as: __jsx(_Rate, null),\n    id: \"roomsRatings\",\n    name: \"roomsRatings\",\n    defaultValue: \"\",\n    control: control\n  }))), __jsx(_Col, null, __jsx(FormControl, {\n    label: \"Cleanliness\",\n    htmlFor: \"cleanlinessRatings\"\n  }, __jsx(Controller, {\n    as: __jsx(_Rate, null),\n    id: \"cleanlinessRatings\",\n    name: \"cleanlinessRatings\",\n    defaultValue: \"\",\n    control: control\n  }))), __jsx(_Col, null, __jsx(FormControl, {\n    label: \"Food\",\n    htmlFor: \"foodRatings\"\n  }, __jsx(Controller, {\n    as: __jsx(_Rate, null),\n    id: \"foodRatings\",\n    name: \"foodRatings\",\n    defaultValue: \"\",\n    control: control\n  })))), __jsx(FormControl, {\n    label: \"Add a tip to help travelers choose a good room\",\n    htmlFor: \"tips\"\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    id: \"tips\",\n    name: \"tips\",\n    defaultValue: \"\",\n    control: control,\n    placeholder: \"E. g. Best views, quieter floors, accessiblity, etc.\"\n  })), __jsx(FormControl, {\n    label: \"Do You have photos to share? (Optional)\"\n  }, __jsx(DragAndDropUploader, {\n    name: \"reviewPhotos\",\n    onUploadChange: data => setValue('hotelPhotos', data)\n  })), __jsx(FormControl, null, __jsx(Controller, {\n    name: \"termsAndCondition\",\n    onChange: ([e]) => {\n      return e.target.checked;\n    },\n    as: __jsx(_Checkbox, null, \"I certify that this review is based on my own experience and is my genuine opinion of this hotel, and that I have no personal or business relationship with this establishment, and have not been offered any incentive or payment originating from the establishment to write this review. I understand that TripFinder has a zero-tolerance policy on fake reviews.\"),\n    control: control\n  })), __jsx(FormControl, {\n    className: \"submit-container\"\n  }, __jsx(_Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    size: \"large\"\n  }, \"Submit Your Review\")));\n};\n\nexport default ReviewForm;","map":null,"metadata":{},"sourceType":"module"}