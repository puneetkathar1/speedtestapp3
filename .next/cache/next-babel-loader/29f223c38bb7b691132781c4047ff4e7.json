{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\components\\\\UI\\\\Title\\\\Title.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionTitleWrapper, { TitleWrapper, LinkWrapper } from './Title.style';\n\nconst SectionTitle = _ref => {\n  let {\n    className,\n    title,\n    link\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"title\", \"link\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['section_title']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(SectionTitleWrapper, _extends({\n    className: addAllClasses.join(' ')\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), title && __jsx(TitleWrapper, {\n    className: \"title_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, title), link && __jsx(LinkWrapper, {\n    className: \"link_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }\n  }, link));\n};\n\nSectionTitle.propTypes = {\n  /** ClassName of the SectionTitle. */\n  className: PropTypes.string,\n\n  /** Add here Heading component from common components. */\n  title: PropTypes.element,\n\n  /** Add here TextLink component from common components. */\n  link: PropTypes.element\n};\nexport default SectionTitle;","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/components/UI/Title/Title.js"],"names":["React","PropTypes","SectionTitleWrapper","TitleWrapper","LinkWrapper","SectionTitle","className","title","link","props","addAllClasses","push","join","propTypes","string","element"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,IAA8BC,YAA9B,EAA4CC,WAA5C,QAA+D,eAA/D;;AAEA,MAAMC,YAAY,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,GAAyC;AAAA,MAAZC,KAAY;;AAC7D;AACA,QAAMC,aAAa,GAAG,CAAC,eAAD,CAAtB,CAF6D,CAI7D;;AACA,MAAIJ,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD;;AAED,SACE,MAAC,mBAAD;AAAqB,IAAA,SAAS,EAAEI,aAAa,CAACE,IAAd,CAAmB,GAAnB;AAAhC,KAA6DH,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,KAAK,IAAI,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,KAAzC,CADZ,EAEGC,IAAI,IAAI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,IAAvC,CAFX,CADF;AAMD,CAfD;;AAiBAH,YAAY,CAACQ,SAAb,GAAyB;AACvB;AACAP,EAAAA,SAAS,EAAEL,SAAS,CAACa,MAFE;;AAGvB;AACAP,EAAAA,KAAK,EAAEN,SAAS,CAACc,OAJM;;AAKvB;AACAP,EAAAA,IAAI,EAAEP,SAAS,CAACc;AANO,CAAzB;AASA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionTitleWrapper, { TitleWrapper, LinkWrapper } from './Title.style';\n\nconst SectionTitle = ({ className, title, link, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['section_title'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <SectionTitleWrapper className={addAllClasses.join(' ')} {...props}>\n      {title && <TitleWrapper className=\"title_wrapper\">{title}</TitleWrapper>}\n      {link && <LinkWrapper className=\"link_wrapper\">{link}</LinkWrapper>}\n    </SectionTitleWrapper>\n  );\n};\n\nSectionTitle.propTypes = {\n  /** ClassName of the SectionTitle. */\n  className: PropTypes.string,\n  /** Add here Heading component from common components. */\n  title: PropTypes.element,\n  /** Add here TextLink component from common components. */\n  link: PropTypes.element,\n};\n\nexport default SectionTitle;\n"]},"metadata":{},"sourceType":"module"}