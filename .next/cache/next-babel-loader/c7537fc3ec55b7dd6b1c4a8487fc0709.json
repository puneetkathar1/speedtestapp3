{"ast":null,"code":"import _Checkbox from \"antd/lib/checkbox\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport ListingMap from 'container/Listing/ListingMap';\nimport { SearchContext } from 'context/SearchProvider';\nimport GetAPIData, { Paginator, SearchedData, SearchStateKeyCheck, ProcessAPIData } from 'library/helpers/get_api_data';\nimport { getDeviceType } from 'library/helpers/get_device_type';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport { LISTING_PAGE_POST_LIMIT, LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP, LISTING_PAGE_COLUMN_WIDTH_WITH_MAP } from 'settings/config';\nimport ListingWrapper, { PostsWrapper, ShowMapCheckbox } from 'container/Listing/Listing.style';\nconst FilterDrawer = dynamic(() => import('container/Listing/Search/MobileSearchView'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('container/Listing/Search/MobileSearchView')],\n    modules: ['container/Listing/Search/MobileSearchView']\n  }\n});\nexport default function ListingPage({\n  processedData,\n  deviceType\n}) {\n  const {\n    state,\n    dispatch\n  } = useContext(SearchContext);\n  const statekey = SearchStateKeyCheck(state);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: showMap,\n    1: setShowMap\n  } = useState(false);\n  useEffect(() => {\n    if (statekey === true) {\n      const newData = SearchedData(processedData);\n      setPosts(newData);\n    } else {\n      setPosts(processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n    }\n  }, [statekey]);\n\n  const handleMapToggle = () => {\n    setShowMap(showMap => !showMap);\n  };\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    setTimeout(() => {\n      const data = Paginator(posts, processedData, LISTING_PAGE_POST_LIMIT);\n      setPosts(data);\n      setLoading(false);\n    }, 1000);\n  };\n\n  let columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\n\n  if (showMap) {\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\n  }\n\n  let columnCount = 'col-24';\n\n  if (deviceType === 'desktop' && showMap === true) {\n    columnCount = 'col-12';\n  }\n\n  return __jsx(ListingWrapper, null, __jsx(Head, null, __jsx(\"title\", null, \"Listing | A react next listing template\")), __jsx(Sticky, {\n    top: 82,\n    innerZ: 999,\n    activeClass: \"isHeaderSticky\"\n  }, __jsx(Toolbar, {\n    left: deviceType === 'desktop' ? __jsx(CategorySearch, null) : __jsx(FilterDrawer, null),\n    right: __jsx(ShowMapCheckbox, null, __jsx(_Checkbox, {\n      defaultChecked: false,\n      onChange: handleMapToggle\n    }, \"Show map\"))\n  })), __jsx(PostsWrapper, {\n    className: columnCount\n  }, __jsx(SectionGrid, {\n    link: SINGLE_POST_PAGE,\n    columnWidth: columnWidth,\n    deviceType: deviceType,\n    data: posts,\n    totalItem: processedData.length,\n    limit: LISTING_PAGE_POST_LIMIT,\n    loading: loading,\n    handleLoadMore: handleLoadMore,\n    placeholder: __jsx(PostPlaceholder, null)\n  })), showMap && __jsx(ListingMap, {\n    loading: loading,\n    mapData: posts\n  }));\n}\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const apiUrl = [{\n    endpoint: 'hotel',\n    name: 'listingHotel'\n  }];\n  const pageData = await GetAPIData(apiUrl);\n  const processedData = ProcessAPIData(pageData);\n  const deviceType = getDeviceType(req);\n  return {\n    props: {\n      processedData,\n      deviceType\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}