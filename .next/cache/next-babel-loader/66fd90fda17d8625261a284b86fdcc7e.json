{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\components\\\\Map\\\\ListingPageMap.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Marker } from 'react-google-maps';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = ({\n  location\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: markerIndex,\n    1: setMarkerIndex\n  } = useState(0);\n  let hotelData = [];\n\n  const infoWindowToggle = index => {\n    setIsOpen(!isOpen);\n    setMarkerIndex(index);\n  };\n\n  location && location.forEach(item => {\n    hotelData.push({\n      id: item.id,\n      lat: parseFloat(item.location.lat),\n      lng: parseFloat(item.location.lng),\n      title: item.title,\n      thumbUrl: item.image.thumb_url,\n      formattedAddress: item.location.formattedAddress,\n      price: item.price,\n      rating: item.rating,\n      ratingCount: item.ratingCount\n    });\n  });\n  return hotelData.map((singlePostLoaction, index) => {\n    return __jsx(Marker, {\n      key: index,\n      icon: MakerImage,\n      position: singlePostLoaction,\n      onClick: () => infoWindowToggle(singlePostLoaction.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, isOpen && markerIndex === singlePostLoaction.id ? __jsx(HotelInfoWindow, {\n      data: singlePostLoaction,\n      onCloseClick: () => infoWindowToggle(singlePostLoaction.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }) : '');\n  });\n};\n\nexport default HotelMapMarkerCluster;","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/components/Map/ListingPageMap.js"],"names":["React","useState","Marker","HotelInfoWindow","MakerImage","HotelMapMarkerCluster","location","isOpen","setIsOpen","markerIndex","setMarkerIndex","hotelData","infoWindowToggle","index","forEach","item","push","id","lat","parseFloat","lng","title","thumbUrl","image","thumb_url","formattedAddress","price","rating","ratingCount","map","singlePostLoaction"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,MAAIU,SAAS,GAAG,EAAhB;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,cAAc,CAACG,KAAD,CAAd;AACD,GAHD;;AAKAP,EAAAA,QAAQ,IACNA,QAAQ,CAACQ,OAAT,CAAkBC,IAAD,IAAU;AACzBJ,IAAAA,SAAS,CAACK,IAAV,CAAe;AACbC,MAAAA,EAAE,EAAEF,IAAI,CAACE,EADI;AAEbC,MAAAA,GAAG,EAAEC,UAAU,CAACJ,IAAI,CAACT,QAAL,CAAcY,GAAf,CAFF;AAGbE,MAAAA,GAAG,EAAED,UAAU,CAACJ,IAAI,CAACT,QAAL,CAAcc,GAAf,CAHF;AAIbC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAJC;AAKbC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ,KAAL,CAAWC,SALR;AAMbC,MAAAA,gBAAgB,EAAEV,IAAI,CAACT,QAAL,CAAcmB,gBANnB;AAObC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAPC;AAQbC,MAAAA,MAAM,EAAEZ,IAAI,CAACY,MARA;AASbC,MAAAA,WAAW,EAAEb,IAAI,CAACa;AATL,KAAf;AAWD,GAZD,CADF;AAeA,SAAOjB,SAAS,CAACkB,GAAV,CAAc,CAACC,kBAAD,EAAqBjB,KAArB,KAA+B;AAClD,WACE,MAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAET,UAFR;AAGE,MAAA,QAAQ,EAAE0B,kBAHZ;AAIE,MAAA,OAAO,EAAE,MAAMlB,gBAAgB,CAACkB,kBAAkB,CAACb,EAApB,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGV,MAAM,IAAIE,WAAW,KAAKqB,kBAAkB,CAACb,EAA7C,GACC,MAAC,eAAD;AACE,MAAA,IAAI,EAAEa,kBADR;AAEE,MAAA,YAAY,EAAE,MAAMlB,gBAAgB,CAACkB,kBAAkB,CAACb,EAApB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,EAZJ,CADF;AAiBD,GAlBM,CAAP;AAmBD,CA5CD;;AA8CA,eAAeZ,qBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Marker } from 'react-google-maps';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = ({ location }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [markerIndex, setMarkerIndex] = useState(0);\n  let hotelData = [];\n\n  const infoWindowToggle = (index) => {\n    setIsOpen(!isOpen);\n    setMarkerIndex(index);\n  };\n\n  location &&\n    location.forEach((item) => {\n      hotelData.push({\n        id: item.id,\n        lat: parseFloat(item.location.lat),\n        lng: parseFloat(item.location.lng),\n        title: item.title,\n        thumbUrl: item.image.thumb_url,\n        formattedAddress: item.location.formattedAddress,\n        price: item.price,\n        rating: item.rating,\n        ratingCount: item.ratingCount,\n      });\n    });\n\n  return hotelData.map((singlePostLoaction, index) => {\n    return (\n      <Marker\n        key={index}\n        icon={MakerImage}\n        position={singlePostLoaction}\n        onClick={() => infoWindowToggle(singlePostLoaction.id)}\n      >\n        {isOpen && markerIndex === singlePostLoaction.id ? (\n          <HotelInfoWindow\n            data={singlePostLoaction}\n            onCloseClick={() => infoWindowToggle(singlePostLoaction.id)}\n          />\n        ) : (\n          ''\n        )}\n      </Marker>\n    );\n  });\n};\n\nexport default HotelMapMarkerCluster;\n"]},"metadata":{},"sourceType":"module"}