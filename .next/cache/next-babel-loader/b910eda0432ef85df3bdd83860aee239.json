{"ast":null,"code":"import _Button from \"antd/lib/button\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Text from 'components/UI/Text/Text';\nimport Box from 'components/UI/Box/Box';\nimport ProductCard from '../ProductCard/ProductCard';\n\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle\n}) => {\n  return !!showButton && __jsx(Box, _extends({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle), loadMoreComponent ? loadMoreComponent : __jsx(_Button, {\n    loading: loading,\n    onClick: handleLoadMore\n  }, buttonText || 'Load More'));\n};\n\nexport default function SectionGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n  let showButton = data.length < totalItem;\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    className: \"grid_wrapper\"\n  }, rowStyle), data && data.length ? data.map(item => {\n    return __jsx(Box, _extends({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle), __jsx(ProductCard, _extends({\n      link: link\n    }, item)));\n  }) : null, loading && limits.map((item, i) => __jsx(Box, _extends({\n    className: \"grid_column\",\n    width: columnWidth,\n    key: i\n  }, columnStyle), placeholder ? placeholder : __jsx(Text, {\n    content: \"Loading ...\"\n  })))), showButton && __jsx(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle\n  }), paginationComponent && __jsx(Box, {\n    className: \"pagination_wrapper\"\n  }, paginationComponent));\n}\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}