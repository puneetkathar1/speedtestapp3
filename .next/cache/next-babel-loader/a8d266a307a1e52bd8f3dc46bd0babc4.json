{"ast":null,"code":"import _Checkbox from \"antd/lib/checkbox\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport ListingMap from 'container/Listing/ListingMap';\nimport { SearchContext } from 'context/SearchProvider';\nimport { Paginator, SearchedData, SearchStateKeyCheck } from 'library/helpers/get_api_data';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport { LISTING_PAGE_POST_LIMIT, LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP, LISTING_PAGE_COLUMN_WIDTH_WITH_MAP } from 'settings/config';\nimport ListingWrapper, { PostsWrapper, ShowMapCheckbox } from 'container/Listing/Listing.style';\nvar FilterDrawer = dynamic(function () {\n  return import('container/Listing/Search/MobileSearchView');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('container/Listing/Search/MobileSearchView')];\n    },\n    modules: ['container/Listing/Search/MobileSearchView']\n  }\n});\nexport var __N_SSG = true;\nexport default function ListingPage(props) {\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var statekey = SearchStateKeyCheck(state);\n\n  var _useState = useState(props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      showMap = _useState3[0],\n      setShowMap = _useState3[1];\n\n  useEffect(function () {\n    if (statekey === true) {\n      var newData = SearchedData(props.processedData);\n      setPosts(newData);\n    } else {\n      setPosts(props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n    }\n  }, [statekey]);\n\n  var handleMapToggle = function handleMapToggle() {\n    setShowMap(function (showMap) {\n      return !showMap;\n    });\n  };\n\n  var handleLoadMore = function handleLoadMore() {\n    setLoading(true);\n    setTimeout(function () {\n      var data = Paginator(posts, props.processedData, LISTING_PAGE_POST_LIMIT);\n      setPosts(data);\n      setLoading(false);\n    }, 1000);\n  };\n\n  var columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\n\n  if (showMap) {\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\n  }\n\n  var columnCount = 'col-24';\n  return __jsx(ListingWrapper, null, __jsx(Head, null, __jsx(\"title\", null, \"Listing | A react next listing template\")), __jsx(Sticky, {\n    top: 82,\n    innerZ: 999,\n    activeClass: \"isHeaderSticky\"\n  }, __jsx(Toolbar, {\n    right: __jsx(ShowMapCheckbox, null, __jsx(_Checkbox, {\n      defaultChecked: false,\n      onChange: handleMapToggle\n    }, \"Show map\"))\n  })), __jsx(PostsWrapper, {\n    className: columnCount\n  }, __jsx(SectionGrid, {\n    link: SINGLE_POST_PAGE,\n    columnWidth: columnWidth,\n    data: posts,\n    totalItem: props.processedData.length,\n    limit: LISTING_PAGE_POST_LIMIT,\n    loading: loading,\n    handleLoadMore: handleLoadMore,\n    placeholder: __jsx(PostPlaceholder, null)\n  })), showMap && __jsx(ListingMap, {\n    loading: loading,\n    mapData: posts\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}