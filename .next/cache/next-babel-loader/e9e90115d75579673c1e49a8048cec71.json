{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from '../UI/FormControl/FormControl';\n\nvar ContactForm = function ContactForm() {\n  var _errors$email, _errors$email2, _errors$phone, _errors$phone2;\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(FormControl, {\n    label: \"Your message\",\n    htmlFor: \"message\",\n    error: errors.message && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5\n    }),\n    id: \"message\",\n    name: \"message\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    }\n  })), __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    md: 12\n  }, __jsx(FormControl, {\n    label: \"Your email\",\n    htmlFor: \"email\",\n    error: errors.email && __jsx(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && __jsx(\"span\", null, \"Please enter a valid email address!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    }\n  }))), __jsx(_Col, {\n    md: 12\n  }, __jsx(FormControl, {\n    label: \"Your contact number\",\n    htmlFor: \"phone\",\n    error: errors.phone && __jsx(React.Fragment, null, ((_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$phone2 = errors.phone) === null || _errors$phone2 === void 0 ? void 0 : _errors$phone2.type) === 'pattern' && __jsx(\"span\", null, \"Please enter your valid number!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input, null),\n    defaultValue: \"\",\n    control: control,\n    id: \"phone\",\n    name: \"phone\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    }\n  })))), __jsx(FormControl, null, __jsx(Controller, {\n    name: \"cookie\",\n    onChange: function onChange(_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          e = _ref2[0];\n\n      return e.target.checked;\n    },\n    as: __jsx(_Checkbox, null, \"Save my email in the browser fro the next time I contact\"),\n    control: control\n  })), __jsx(FormControl, null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\"\n  }, \"Submit\")));\n};\n\nexport default ContactForm;","map":null,"metadata":{},"sourceType":"module"}