{"ast":null,"code":"import _Checkbox from \"antd/lib/checkbox\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\trip-main\\\\pages\\\\listing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport ListingMap from 'container/Listing/ListingMap';\nimport { SearchContext } from 'context/SearchProvider';\nimport { Paginator, SearchedData, SearchStateKeyCheck } from 'library/helpers/get_api_data';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport { LISTING_PAGE_POST_LIMIT, LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP, LISTING_PAGE_COLUMN_WIDTH_WITH_MAP } from 'settings/config';\nimport ListingWrapper, { PostsWrapper, ShowMapCheckbox } from 'container/Listing/Listing.style';\nvar FilterDrawer = dynamic(_c = function _c() {\n  return import('container/Listing/Search/MobileSearchView');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('container/Listing/Search/MobileSearchView')];\n    },\n    modules: ['container/Listing/Search/MobileSearchView']\n  }\n});\n_c2 = FilterDrawer;\nexport var __N_SSG = true;\nexport default function ListingPage(props) {\n  _s();\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var statekey = SearchStateKeyCheck(state);\n\n  var _useState = useState(props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      showMap = _useState3[0],\n      setShowMap = _useState3[1];\n\n  useEffect(function () {\n    if (statekey === true) {\n      var newData = SearchedData(props.processedData);\n      setPosts(newData);\n    } else {\n      setPosts(props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n    }\n  }, [statekey]);\n\n  var handleMapToggle = function handleMapToggle() {\n    setShowMap(function (showMap) {\n      return !showMap;\n    });\n  };\n\n  var handleLoadMore = function handleLoadMore() {\n    setLoading(true);\n    setTimeout(function () {\n      var data = Paginator(posts, props.processedData, LISTING_PAGE_POST_LIMIT);\n      setPosts(data);\n      setLoading(false);\n    }, 1000);\n  };\n\n  var columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\n\n  if (showMap) {\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\n  }\n\n  var columnCount = 'col-24';\n\n  if (props.deviceType === 'desktop' && showMap === true) {\n    columnCount = 'col-12';\n  }\n\n  return __jsx(ListingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Listing | A react next listing template\")), __jsx(Sticky, {\n    top: 82,\n    innerZ: 999,\n    activeClass: \"isHeaderSticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    left: props.deviceType === 'desktop' ? __jsx(CategorySearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 46\n      }\n    }) : __jsx(FilterDrawer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 67\n      }\n    }),\n    right: __jsx(ShowMapCheckbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(_Checkbox, {\n      defaultChecked: false,\n      onChange: handleMapToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Show map\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), __jsx(PostsWrapper, {\n    className: columnCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(SectionGrid, {\n    link: SINGLE_POST_PAGE,\n    columnWidth: columnWidth,\n    deviceType: props.deviceType,\n    data: posts,\n    totalItem: props.processedData.length,\n    limit: LISTING_PAGE_POST_LIMIT,\n    loading: loading,\n    handleLoadMore: handleLoadMore,\n    placeholder: __jsx(PostPlaceholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), showMap && __jsx(ListingMap, {\n    loading: loading,\n    mapData: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }));\n}\n\n_s(ListingPage, \"icA7jGBVemmDLH1+x5w6AbQFA7U=\");\n\n_c3 = ListingPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilterDrawer$dynamic\");\n$RefreshReg$(_c2, \"FilterDrawer\");\n$RefreshReg$(_c3, \"ListingPage\");","map":{"version":3,"sources":["C:/Users/Puneet/Documents/trip-main/pages/listing.js"],"names":["useState","useEffect","useContext","Head","dynamic","Sticky","Toolbar","CategorySearch","SectionGrid","PostPlaceholder","ListingMap","SearchContext","Paginator","SearchedData","SearchStateKeyCheck","SINGLE_POST_PAGE","LISTING_PAGE_POST_LIMIT","LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP","LISTING_PAGE_COLUMN_WIDTH_WITH_MAP","ListingWrapper","PostsWrapper","ShowMapCheckbox","FilterDrawer","ListingPage","props","state","dispatch","statekey","processedData","slice","posts","setPosts","loading","setLoading","showMap","setShowMap","newData","handleMapToggle","handleLoadMore","setTimeout","data","columnWidth","columnCount","deviceType","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\nimport { Checkbox } from 'antd';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport ListingMap from 'container/Listing/ListingMap';\nimport { SearchContext } from 'context/SearchProvider';\nimport GetAPIData, {\n  Paginator,\n  SearchedData,\n  SearchStateKeyCheck,\n  ProcessAPIData,\n} from 'library/helpers/get_api_data';\nimport { getDeviceType } from 'library/helpers/get_device_type';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport {\n  LISTING_PAGE_POST_LIMIT,\n  LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP,\n  LISTING_PAGE_COLUMN_WIDTH_WITH_MAP,\n} from 'settings/config';\nimport ListingWrapper, {\n  PostsWrapper,\n  ShowMapCheckbox,\n} from 'container/Listing/Listing.style';\n\nconst FilterDrawer = dynamic(() =>\n  import('container/Listing/Search/MobileSearchView')\n);\n\nexport default function ListingPage(props) {\n  const { state, dispatch } = useContext(SearchContext);\n  const statekey = SearchStateKeyCheck(state);\n  const [posts, setPosts] = useState(\n    props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []\n  );\n  const [loading, setLoading] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n\n  useEffect(() => {\n    if (statekey === true) {\n      const newData = SearchedData(props.processedData);\n      setPosts(newData);\n    } else {\n      setPosts(props.processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n    }\n  }, [statekey]);\n\n  const handleMapToggle = () => {\n    setShowMap((showMap) => !showMap);\n  };\n\n  const handleLoadMore = () => {\n    setLoading(true);\n    setTimeout(() => {\n      const data = Paginator(posts, props.processedData, LISTING_PAGE_POST_LIMIT);\n      setPosts(data);\n      setLoading(false);\n    }, 1000);\n  };\n\n  let columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\n  if (showMap) {\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\n  }\n\n  let columnCount = 'col-24';\n  if (props.deviceType === 'desktop' && showMap === true) {\n    columnCount = 'col-12';\n  }\n\n  return (\n    <ListingWrapper>\n      <Head>\n        <title>Listing | A react next listing template</title>\n      </Head>\n\n      <Sticky top={82} innerZ={999} activeClass=\"isHeaderSticky\">\n        <Toolbar\n          left={\n            props.deviceType === 'desktop' ? <CategorySearch /> : <FilterDrawer />\n          }\n          right={\n            <ShowMapCheckbox>\n              <Checkbox defaultChecked={false} onChange={handleMapToggle}>\n                Show map\n              </Checkbox>\n            </ShowMapCheckbox>\n          }\n        />\n      </Sticky>\n\n      <PostsWrapper className={columnCount}>\n        <SectionGrid\n          link={SINGLE_POST_PAGE}\n          columnWidth={columnWidth}\n          deviceType={props.deviceType}\n          data={posts}\n          totalItem={props.processedData.length}\n          limit={LISTING_PAGE_POST_LIMIT}\n          loading={loading}\n          handleLoadMore={handleLoadMore}\n          placeholder={<PostPlaceholder />}\n        />\n      </PostsWrapper>\n      {showMap && <ListingMap loading={loading} mapData={posts} />}\n    </ListingWrapper>\n  );\n}\n\nexport async function getStaticProps(context) {\n  const { req } = context;\n  const apiUrl = [\n    {\n      endpoint: 'hotel',\n      name: 'listingHotel',\n    },\n  ];\n  const pageData = await GetAPIData(apiUrl);\n  const processedData = ProcessAPIData(pageData);\n  const deviceType = getDeviceType(req);\n  return {\n    props: { processedData, deviceType },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}