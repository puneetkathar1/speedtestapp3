{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Button from \"antd/lib/button\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { FormTitle } from './AccountSettings.style';\nexport default function ChangePassWord() {\n  var _errors$newPassword, _errors$newPassword2, _errors$newPassword3;\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      watch = _useForm.watch,\n      handleSubmit = _useForm.handleSubmit;\n\n  var newPassword = watch('newPassword');\n  var confirmPassword = watch('confirmPassword');\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormTitle, null, \"Change Password\"), __jsx(\"form\", {\n    className: \"form-container\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(_Row, {\n    gutter: 30\n  }, __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Enter old password\",\n    htmlFor: \"oldPassword\",\n    error: errors.oldPassword && __jsx(\"span\", null, \"This field is required!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input.Password, null),\n    defaultValue: \"\",\n    control: control,\n    id: \"oldPassword\",\n    name: \"oldPassword\",\n    rules: {\n      required: true\n    }\n  }))), __jsx(_Col, {\n    lg: 12\n  }, __jsx(FormControl, {\n    label: \"Enter new password\",\n    htmlFor: \"newPassword\",\n    error: errors.newPassword && __jsx(React.Fragment, null, ((_errors$newPassword = errors.newPassword) === null || _errors$newPassword === void 0 ? void 0 : _errors$newPassword.type) === 'required' && __jsx(\"span\", null, \"This field is required!\"), ((_errors$newPassword2 = errors.newPassword) === null || _errors$newPassword2 === void 0 ? void 0 : _errors$newPassword2.type) === 'minLength' && __jsx(\"span\", null, \"New password must be at lest 6 characters!\"), ((_errors$newPassword3 = errors.newPassword) === null || _errors$newPassword3 === void 0 ? void 0 : _errors$newPassword3.type) === 'maxLength' && __jsx(\"span\", null, \"New password must not be longer than 20 characters!\"))\n  }, __jsx(Controller, {\n    as: __jsx(_Input.Password, null),\n    defaultValue: \"\",\n    control: control,\n    id: \"newPassword\",\n    name: \"newPassword\",\n    rules: {\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    }\n  }))), __jsx(_Col, {\n    lg: 24\n  }, __jsx(FormControl, {\n    label: \"Confirm new password\",\n    htmlFor: \"confirmPassword\",\n    error: confirmPassword && newPassword !== confirmPassword && __jsx(\"span\", null, \"Confirm password must be the same!\")\n  }, __jsx(Controller, {\n    as: __jsx(_Input.Password, null),\n    defaultValue: \"\",\n    control: control,\n    id: \"confirmPassword\",\n    name: \"confirmPassword\"\n  }))), __jsx(_Col, {\n    lg: 24\n  }, __jsx(\"div\", {\n    className: \"submit-container\"\n  }, __jsx(_Button, {\n    htmlType: \"submit\",\n    type: \"primary\"\n  }, \"Save Changes\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}